{"version":3,"sources":["components/CardComponent/CardComponent.jsx","App.js","index.js"],"names":["CardComponent","props","Div","styled","div","top","angle","zIndex","useState","show","setShow","cardRef","useRef","useEffect","console","log","gsap","registerPlugin","Draggable","create","current","type","onPress","onDrag","to","rotationZ","this","deltaX","deltaY","rotationX","onRelease","endX","window","innerWidth","x","y","rotation","eventCallback","onDelete","className","onMouseOver","e","scale","transformPerspective","boxShadow","delay","onMouseLeave","ref","id","text","author","App","cards","setCards","length","i","push","data","Math","floor","random","onCardDelete","pop","map","card","key","quoteText","quoteAuthor","undefined","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7446e4e.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"gsap/all\";\r\nimport gsap from \"gsap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardComponent = props => {\r\n  const Div = styled.div`\r\n    ${!props.top ? \"transform: rotate(\" + props.angle + \"deg) !important\" : \"\"};\r\n    z-index: ${props.zIndex};\r\n    ${props.top ? \"box-shadow: 5px 5px 5px 1px rgba(94, 94, 94, 0.4)\" : null};\r\n  `;\r\n\r\n  const [show, setShow] = useState(true);\r\n  const cardRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"CardRef\", cardRef);\r\n\r\n    gsap.registerPlugin(Draggable);\r\n    Draggable.create(cardRef.current, {\r\n      type: \"x,y\",\r\n      onPress: function() {\r\n        //  alert(\"clicked\");\r\n      },\r\n      onDrag: function() {\r\n        gsap.to(cardRef.current, 0.8, {\r\n          //   tranformOrigin: \"bottom 50%\",\r\n          rotationZ: this.deltaX * 1.2 + this.deltaY * 1,\r\n          rotationX: this.deltaY * 0\r\n        });\r\n      },\r\n      onRelease: function() {\r\n        if (this.endX < window.innerWidth / 5) {\r\n          //   gsap.to(\".draggable\", 0.4, {\r\n          //     tranformOrigin: \"top left\",\r\n          //     rotationX: 0,\r\n          //     rotationY: 0,\r\n          //     rotationZ: 0\r\n          //   });\r\n          gsap.to(cardRef.current, 0.8, { x: 0, y: 0, rotation: 0 });\r\n        } else {\r\n          gsap\r\n            .to(cardRef.current, 0.4, { x: window.innerWidth + 300 })\r\n            .eventCallback(\"onComplete\", () => setShow(false))\r\n            .eventCallback(\"onComplete\", () => props.onDelete());\r\n        }\r\n      }\r\n    });\r\n  }, [props.top]);\r\n\r\n  const handleMouseOver = e => {\r\n    gsap.to(cardRef.current, 0.2, {\r\n      scale: 1.1,\r\n      transformPerspective: 800,\r\n      rotationX: \"-8deg\",\r\n      boxShadow: \"15px 15px 10px 1px rgba(94, 94, 94, 0.4)\"\r\n    });\r\n    gsap.to(cardRef.current, 0.8, {\r\n      rotationX: 0,\r\n      delay: 0.3\r\n    });\r\n  };\r\n\r\n  const handleMouseLeave = e => {\r\n    gsap.to(cardRef.current, 0.2, {\r\n      // scale: 0.91,\r\n      scale: 1.0,\r\n      rotationX: 0,\r\n      rotationZ: 0,\r\n      boxShadow: \"5px 5px 5px 1px rgba(94, 94, 94, 0.4)\"\r\n    });\r\n  };\r\n\r\n  //   render() {\r\n  return (\r\n    show && (\r\n      <Div\r\n        className=\"card draggable\"\r\n        onMouseOver={handleMouseOver}\r\n        onMouseLeave={handleMouseLeave}\r\n        ref={cardRef}\r\n      >\r\n        <div className=\"quote\" id=\"text\">\r\n          {/* We can only learn to love by loving. */}\r\n          {props.text}\r\n        </div>\r\n        <div className=\"author\" id=\"author\">\r\n          {/* Iris Murdoch */}\r\n          {props.author}\r\n        </div>\r\n      </Div>\r\n    )\r\n  );\r\n  //   }\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { useEffect, useState } from \"react\";\n// import \"./styles-cards.css\";\nimport CardComponent from \"./components/CardComponent/CardComponent\";\nimport data from \"./data/quotes.json\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  @media (max-width: 800px) {\n    .card {\n      bottom: 10vh !important;\n      #text {\n        line-height: 25px;\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 0px 100% 0px;\n\n    .card {\n      width: 80% !important;\n      /* width: 80vw !important; */\n      height: 50vh !important;\n      /* max-height: 50vh; */\n      margin: 0;\n      bottom: 0vh !important;\n    }\n  }\n`;\n\nfunction App() {\n  let [cards, setCards] = useState([]);\n\n  //Load 10 random cards from JSON \"data\";\n  console.log(\"Cards before PUSH\", cards);\n\n  //Push new cards only when it's empty\n  if (cards.length === 0) {\n    for (let i = 0; i < 10; i++) {\n      cards.push(data[Math.floor(Math.random() * data.length)]);\n      cards[i].angle = (Math.random() * 2 - 1) * 15;\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"redrawn\");\n  }, [cards]);\n\n  const onCardDelete = () => {\n    cards.pop();\n    setCards([...cards]);\n    console.log(\"Card deleted\", cards);\n  };\n\n  return (\n    <Div className=\"wrapper\" id=\"quote-box\">\n      <div className=\"header\">\n        <div className=\"pause\" />\n      </div>\n      <div className=\"cards\">\n        {cards.map((card, i) => (\n          <CardComponent\n            key={i}\n            text={cards[i].quoteText}\n            author={cards[i].quoteAuthor}\n            zIndex={i + 1}\n            top={cards[i + 1] === undefined ? \"top\" : null}\n            onDelete={onCardDelete}\n            angle={cards[i].angle}\n          />\n        ))}\n      </div>\n      <div className=\"footer\">\n        <div href=\"http://facebook.com\" className=\"facebook\" />\n        <div href=\"http://facebook.com\" className=\"tumbler\" />\n        <div href=\"http://facebook.com\" id=\"tweet-quote\" className=\"twitter\" />\n        <div className=\"NEXT\" id=\"new-quote\" />\n      </div>\n    </Div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}