{"version":3,"sources":["components/CardComponent/CardComponent.jsx","App.js","index.js"],"names":["Div","styled","div","CardComponent","props","useState","show","setShow","useEffect","gsap","registerPlugin","Draggable","create","type","onPress","onDrag","to","rotationZ","this","deltaX","deltaY","rotationX","onRelease","endX","window","innerWidth","x","y","rotation","eventCallback","className","onMouseOver","e","scale","transformPerspective","boxShadow","delay","onMouseLeave","id","text","author","App","console","log","data","length","cards","i","push","Math","floor","random","quoteText","quoteAuthor","href","ReactDOM","render","document","getElementById"],"mappings":"20zpBAKA,IAAMA,E,KAAMC,EAAOC,IAAV,KA2FMC,EA9EO,SAAAC,GAAU,IAAD,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,KAE7BC,qBAAU,WACRC,IAAKC,eAAeC,KACpBA,IAAUC,OAAO,aAAc,CAC7BC,KAAM,MACNC,QAAS,aAGTC,OAAQ,WACNN,IAAKO,GAAG,aAAc,GAAK,CAEzBC,UAAyB,IAAdC,KAAKC,OAA6B,EAAdD,KAAKE,OACpCC,UAAyB,EAAdH,KAAKE,UAGpBE,UAAW,WACLJ,KAAKK,KAAOC,OAAOC,WAAa,EAOlChB,IAAKO,GAAG,aAAc,GAAK,CAAEU,EAAG,EAAGC,EAAG,EAAGC,SAAU,IAEnDnB,IACGO,GAAG,aAAc,IAAK,CAAEU,EAAG,OAC3BG,cAAc,cAAc,kBAAMtB,GAAQ,WAIlD,IAyBH,OACED,GACE,kBAACN,EAAD,CACE8B,UAAU,iBACVC,YA3BkB,SAAAC,GACtBvB,IAAKO,GAAG,aAAc,GAAK,CACzBiB,MAAO,IACPC,qBAAsB,IACtBb,UAAW,QACXc,UAAW,6CAEb1B,IAAKO,GAAG,aAAc,GAAK,CACzBK,UAAW,EACXe,MAAO,MAmBLC,aAfmB,SAAAL,GACvBvB,IAAKO,GAAG,aAAc,GAAK,CACzBiB,MAAO,IACPZ,UAAW,EACXJ,UAAW,EACXkB,UAAW,4CAYT,yBAAKL,UAAU,QAAQQ,GAAG,QAEvBlC,EAAMmC,MAET,yBAAKT,UAAU,SAASQ,GAAG,UAExBlC,EAAMoC,U,OC3CFC,MAxCf,WAEEC,QAAQC,IAAI,mBAAoBC,EAAKC,OAAQD,EAAK,IAMlD,IAJA,IAAIE,EAAQ,GAIHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAME,KAAKJ,EAAKK,KAAKC,MAAMD,KAAKE,SAAWP,EAAKC,UASlD,OANAH,QAAQC,IAAIG,GAEZtC,qBAAU,cAEP,IAGD,yBAAKsB,UAAU,UAAUQ,GAAG,aAC1B,yBAAKR,UAAU,UACb,yBAAKA,UAAU,WAGjB,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACES,KAAMO,EAAM,GAAGM,UACfZ,OAAQM,EAAM,GAAGO,eAGrB,yBAAKvB,UAAU,UACb,yBAAKwB,KAAK,sBAAsBxB,UAAU,aAC1C,yBAAKwB,KAAK,sBAAsBxB,UAAU,YAC1C,yBAAKwB,KAAK,sBAAsBhB,GAAG,cAAcR,UAAU,YAC3D,yBAAKA,UAAU,OAAOQ,GAAG,iBCjCjCiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bf7d5626.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Draggable } from \"gsap/all\";\r\nimport gsap from \"gsap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n  @media (max-width: 500px) {\r\n    /* border: 2px solid red !important; */\r\n    width: 80vw !important;\r\n    height: auto !important;\r\n    max-height: 60vh;\r\n\r\n    #text {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardComponent = props => {\r\n  const [show, setShow] = useState(true);\r\n  useEffect(() => {\r\n    gsap.registerPlugin(Draggable);\r\n    Draggable.create(\".draggable\", {\r\n      type: \"x,y\",\r\n      onPress: function() {\r\n        //  alert(\"clicked\");\r\n      },\r\n      onDrag: function() {\r\n        gsap.to(\".draggable\", 0.8, {\r\n          //   tranformOrigin: \"bottom 50%\",\r\n          rotationZ: this.deltaX * 1.2 + this.deltaY * 1,\r\n          rotationX: this.deltaY * 0\r\n        });\r\n      },\r\n      onRelease: function() {\r\n        if (this.endX < window.innerWidth / 3) {\r\n          //   gsap.to(\".draggable\", 0.4, {\r\n          //     tranformOrigin: \"top left\",\r\n          //     rotationX: 0,\r\n          //     rotationY: 0,\r\n          //     rotationZ: 0\r\n          //   });\r\n          gsap.to(\".draggable\", 0.8, { x: 0, y: 0, rotation: 0 });\r\n        } else {\r\n          gsap\r\n            .to(\".draggable\", 3.4, { x: 4500 })\r\n            .eventCallback(\"onComplete\", () => setShow(false));\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleMouseOver = e => {\r\n    gsap.to(\".draggable\", 0.2, {\r\n      scale: 1.1,\r\n      transformPerspective: 800,\r\n      rotationX: \"-8deg\",\r\n      boxShadow: \"15px 15px 10px 1px rgba(94, 94, 94, 0.8)\"\r\n    });\r\n    gsap.to(\".draggable\", 0.8, {\r\n      rotationX: 0,\r\n      delay: 0.3\r\n    });\r\n  };\r\n\r\n  const handleMouseLeave = e => {\r\n    gsap.to(\".draggable\", 0.2, {\r\n      scale: 0.91,\r\n      rotationX: 0,\r\n      rotationZ: 0,\r\n      boxShadow: \"5px 5px 5px 1px rgba(94, 94, 94, 0.8)\"\r\n    });\r\n  };\r\n\r\n  //   render() {\r\n  return (\r\n    show && (\r\n      <Div\r\n        className=\"card draggable\"\r\n        onMouseOver={handleMouseOver}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <div className=\"quote\" id=\"text\">\r\n          {/* We can only learn to love by loving. */}\r\n          {props.text}\r\n        </div>\r\n        <div className=\"author\" id=\"author\">\r\n          {/* Iris Murdoch */}\r\n          {props.author}\r\n        </div>\r\n      </Div>\r\n    )\r\n  );\r\n  //   }\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { useEffect } from \"react\";\n// import \"./styles-cards.css\";\nimport CardComponent from \"./components/CardComponent/CardComponent\";\nimport data from \"./data/quotes.json\";\n\nfunction App() {\n  // const data = useState(null);\n  console.log(\"Json lenght is: \", data.length, data[0]);\n\n  let cards = [];\n\n  //Load 10 random cards from JSON \"data\";\n\n  for (let i = 0; i < 10; i++) {\n    cards.push(data[Math.floor(Math.random() * data.length)]);\n  }\n\n  console.log(cards);\n\n  useEffect(() => {\n    // data =\n  }, []);\n\n  return (\n    <div className=\"wrapper\" id=\"quote-box\">\n      <div className=\"header\">\n        <div className=\"pause\" />\n        {/* <div href='#' class=\"theme\"></div> */}\n      </div>\n      <div className=\"cards\">\n        <CardComponent\n          text={cards[0].quoteText}\n          author={cards[0].quoteAuthor}\n        />\n      </div>\n      <div className=\"footer\">\n        <div href=\"http://facebook.com\" className=\"facebook\" />\n        <div href=\"http://facebook.com\" className=\"tumbler\" />\n        <div href=\"http://facebook.com\" id=\"tweet-quote\" className=\"twitter\" />\n        <div className=\"NEXT\" id=\"new-quote\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}