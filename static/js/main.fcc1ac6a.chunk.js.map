{"version":3,"sources":["components/CardComponent/CardComponent.jsx","App.js","index.js"],"names":["CardComponent","props","Div","styled","div","top","angle","zIndex","useState","show","setShow","cardRef","useRef","useEffect","gsap","registerPlugin","Draggable","create","current","type","onPress","onDrag","to","rotationZ","this","deltaX","deltaY","rotationX","onRelease","endX","window","innerWidth","x","y","rotation","undefined","eventCallback","onCardDelete","nextClicked","console","log","unsetNextClicked","className","onMouseOver","e","scale","transformPerspective","boxShadow","delay","onMouseLeave","ref","id","text","author","App","cards","setCards","setNextClicked","currentQuote","setCurrentQuote","currentAuthor","setCurrentAuthor","length","i","push","data","Math","floor","random","document","querySelector","innerHTML","pop","map","card","key","quoteText","quoteAuthor","href","target","onClick","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fcc1ac6a.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"gsap/all\";\r\nimport gsap from \"gsap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardComponent = props => {\r\n  const Div = styled.div`\r\n    ${!props.top ? \"transform: rotate(\" + props.angle + \"deg) !important\" : \"\"};\r\n    z-index: ${props.zIndex};\r\n    ${props.top ? \"box-shadow: 5px 5px 5px 1px rgba(94, 94, 94, 0.4)\" : null};\r\n  `;\r\n\r\n  const [show, setShow] = useState(true);\r\n  const cardRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"CardRef\", cardRef);\r\n\r\n    gsap.registerPlugin(Draggable);\r\n    Draggable.create(cardRef.current, {\r\n      type: \"x,y\",\r\n      onPress: function() {\r\n        //  alert(\"clicked\");\r\n      },\r\n      onDrag: function() {\r\n        gsap.to(cardRef.current, 0.8, {\r\n          //   tranformOrigin: \"bottom 50%\",\r\n          rotationZ: this.deltaX * 1.2 + this.deltaY * 1,\r\n          rotationX: this.deltaY * 0\r\n        });\r\n      },\r\n      onRelease: function() {\r\n        // console.log(this.endX);\r\n        if (this.endX < window.innerWidth / 5) {\r\n          //   gsap.to(\".draggable\", 0.4, {\r\n          //     tranformOrigin: \"top left\",\r\n          //     rotationX: 0,\r\n          //     rotationY: 0,\r\n          //     rotationZ: 0\r\n          //   });\r\n          gsap.to(cardRef.current, 0.8, { x: 0, y: 0, rotation: 0 });\r\n        } else if (this.endX === undefined) {\r\n          //do nothing\r\n        } else {\r\n          gsap\r\n            .to(cardRef.current, 0.4, { x: window.innerWidth / 2 + 300 })\r\n            .eventCallback(\"onComplete\", () => setShow(false))\r\n            .eventCallback(\"onComplete\", () => props.onCardDelete());\r\n        }\r\n      }\r\n    });\r\n  }, [props.top]);\r\n\r\n  useEffect(() => {\r\n    if (props.nextClicked) {\r\n      gsap\r\n        .to(cardRef.current, 0.8, { x: window.innerWidth / 2 + 300 })\r\n        .eventCallback(\"onComplete\", () => {\r\n          console.log(\"state set to false\");\r\n          // setShow(!show);\r\n          props.unsetNextClicked();\r\n          props.onCardDelete();\r\n        });\r\n\r\n      // setShow(false);\r\n      // props.onCardDelete();\r\n      // props.unsetNextClicked();\r\n\r\n      // gsap\r\n      //   .to(cardRef.current, 1.5, { x: window.innerWidth / 2 + 300 })\r\n      //   .eventCallback(\"onComplete\", () => setShow(false))\r\n      //   .eventCallback(\"onComplete\", () => props.onCardDelete())\r\n      //   .eventCallback(\"onComplete\", () => props.unsetNextClicked())\r\n    }\r\n  }, [props.nextClicked, show]);\r\n\r\n  const handleMouseOver = e => {\r\n    gsap.to(cardRef.current, 0.2, {\r\n      scale: 1.1,\r\n      transformPerspective: 800,\r\n      rotationX: \"-8deg\",\r\n      boxShadow: \"15px 15px 10px 1px rgba(94, 94, 94, 0.4)\"\r\n    });\r\n    gsap.to(cardRef.current, 0.8, {\r\n      rotationX: 0,\r\n      delay: 0.3\r\n    });\r\n  };\r\n\r\n  const handleMouseLeave = e => {\r\n    gsap.to(cardRef.current, 0.2, {\r\n      // scale: 0.91,\r\n      scale: 1.0,\r\n      rotationX: 0,\r\n      rotationZ: 0,\r\n      boxShadow: \"5px 5px 5px 1px rgba(94, 94, 94, 0.4)\"\r\n    });\r\n  };\r\n\r\n  //   render() {\r\n  return (\r\n    show && (\r\n      <Div\r\n        className=\"card draggable\"\r\n        onMouseOver={handleMouseOver}\r\n        onMouseLeave={handleMouseLeave}\r\n        ref={cardRef}\r\n      >\r\n        <div className=\"quote\" id={props.top ? \"text\" : null}>\r\n          {props.text}\r\n        </div>\r\n        <div className=\"author\" id={props.top ? \"author\" : null}>\r\n          {props.author}\r\n        </div>\r\n      </Div>\r\n    )\r\n  );\r\n  //   }\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { useEffect, useState } from \"react\";\n// import \"./styles-cards.css\";\nimport CardComponent from \"./components/CardComponent/CardComponent\";\nimport data from \"./data/quotes.json\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  @media (max-width: 800px) {\n    .card {\n      bottom: 10vh !important;\n      #text {\n        line-height: 25px;\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 0px 100% 0px;\n\n    .card {\n      width: 80% !important;\n      /* width: 80vw !important; */\n      height: 50vh !important;\n      /* max-height: 50vh; */\n      margin: 0;\n      bottom: 0vh !important;\n    }\n  }\n`;\n\nfunction App() {\n  let [cards, setCards] = useState([]);\n  let [nextClicked, setNextClicked] = useState(false);\n  let [currentQuote, setCurrentQuote] = useState(\"\");\n  let [currentAuthor, setCurrentAuthor] = useState(\"\");\n\n  //Load 10 random cards from JSON \"data\";\n  // console.log(\"Cards before PUSH\", cards);\n\n  //Push new cards only when it's empty\n  if (cards.length === 0) {\n    for (let i = 0; i < 10; i++) {\n      cards.push(data[Math.floor(Math.random() * data.length)]);\n      cards[i].angle = (Math.random() * 2 - 1) * 15;\n    }\n    // console.log(\"Cards\", cards);\n  }\n\n  useEffect(() => {\n    // console.log(\"redrawn\");\n    currentQuote = setCurrentQuote(document.querySelector(\"#text\").innerHTML);\n    currentAuthor = setCurrentAuthor(\n      document.querySelector(\"#author\").innerHTML\n    );\n    console.log(currentQuote, currentAuthor);\n  }, [cards, nextClicked]);\n\n  const onCardDelete = () => {\n    cards.pop();\n    setCards([...cards]);\n    console.log(\"Card deleted\", cards);\n  };\n\n  const handleNextClicked = () => {\n    console.log(\"handle Next called\");\n    setNextClicked(true);\n  };\n\n  const unsetNextClicked = () => {\n    console.log(\"Unset Called\");\n\n    setNextClicked(false);\n  };\n\n  return (\n    <Div className=\"wrapper\" id=\"quote-box\">\n      <div className=\"header\">\n        <div className=\"pause\" />\n      </div>\n      <div className=\"cards\">\n        {cards.map((card, i) => (\n          <CardComponent\n            key={i}\n            text={cards[i].quoteText}\n            author={cards[i].quoteAuthor}\n            zIndex={i + 1}\n            top={cards[i + 1] === undefined ? true : false}\n            onCardDelete={onCardDelete}\n            angle={cards[i].angle}\n            nextClicked={nextClicked && cards[i + 1] === undefined}\n            unsetNextClicked={unsetNextClicked}\n          />\n        ))}\n      </div>\n      <div className=\"footer\">\n        <div href=\"http://facebook.com\" className=\"facebook\" />\n        <div href=\"http://facebook.com\" className=\"tumbler\" />\n        <a\n          href={`https://twitter.com/intent/tweet?text=\"${currentQuote}\" - ${currentAuthor} `}\n          target=\"_blank\"\n          id=\"tweet-quote\"\n          className=\"twitter\"\n        />\n        <div className=\"NEXT\" id=\"new-quote\" onClick={handleNextClicked} />\n      </div>\n    </Div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}